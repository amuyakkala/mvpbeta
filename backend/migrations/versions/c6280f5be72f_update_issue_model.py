"""update_issue_model

Revision ID: c6280f5be72f
Revises: 20240319_initial_migration
Create Date: 2025-04-28 19:23:46.830128

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect


# revision identifiers, used by Alembic.
revision = 'c6280f5be72f'
down_revision = '20240319_initial_migration'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = inspect(conn)
    
    # Use batch mode for all operations
    with op.batch_alter_table('audit_logs') as batch_op:
        if 'ix_audit_logs_id' not in [idx['name'] for idx in inspector.get_indexes('audit_logs')]:
            batch_op.create_index(batch_op.f('ix_audit_logs_id'), ['id'], unique=False)
    
    with op.batch_alter_table('issues') as batch_op:
        if 'ix_issues_id' not in [idx['name'] for idx in inspector.get_indexes('issues')]:
            batch_op.create_index(batch_op.f('ix_issues_id'), ['id'], unique=False)
        if 'ix_issues_title' not in [idx['name'] for idx in inspector.get_indexes('issues')]:
            batch_op.create_index(batch_op.f('ix_issues_title'), ['title'], unique=False)
        batch_op.alter_column('title', nullable=True)
        # Add foreign key constraint with a name
        fks = inspector.get_foreign_keys('issues')
        if not any(fk['referred_table'] == 'traces' for fk in fks):
            batch_op.create_foreign_key('fk_issues_trace_id', 'traces', ['trace_id'], ['id'])
    
    with op.batch_alter_table('notifications') as batch_op:
        if 'ix_notifications_id' not in [idx['name'] for idx in inspector.get_indexes('notifications')]:
            batch_op.create_index(batch_op.f('ix_notifications_id'), ['id'], unique=False)
    
    with op.batch_alter_table('traces') as batch_op:
        if 'ix_traces_id' not in [idx['name'] for idx in inspector.get_indexes('traces')]:
            batch_op.create_index(batch_op.f('ix_traces_id'), ['id'], unique=False)
    
    with op.batch_alter_table('users') as batch_op:
        if 'ix_users_email' not in [idx['name'] for idx in inspector.get_indexes('users')]:
            batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        if 'ix_users_id' not in [idx['name'] for idx in inspector.get_indexes('users')]:
            batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)
        batch_op.alter_column('email', nullable=True)
        batch_op.alter_column('hashed_password', nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = inspect(conn)
    
    # Use batch mode for all operations
    with op.batch_alter_table('users') as batch_op:
        if 'ix_users_id' in [idx['name'] for idx in inspector.get_indexes('users')]:
            batch_op.drop_index(batch_op.f('ix_users_id'))
        if 'ix_users_email' in [idx['name'] for idx in inspector.get_indexes('users')]:
            batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.alter_column('hashed_password', nullable=False)
        batch_op.alter_column('email', nullable=False)
    
    with op.batch_alter_table('traces') as batch_op:
        if 'ix_traces_id' in [idx['name'] for idx in inspector.get_indexes('traces')]:
            batch_op.drop_index(batch_op.f('ix_traces_id'))
    
    with op.batch_alter_table('notifications') as batch_op:
        if 'ix_notifications_id' in [idx['name'] for idx in inspector.get_indexes('notifications')]:
            batch_op.drop_index(batch_op.f('ix_notifications_id'))
    
    with op.batch_alter_table('issues') as batch_op:
        if 'ix_issues_title' in [idx['name'] for idx in inspector.get_indexes('issues')]:
            batch_op.drop_index(batch_op.f('ix_issues_title'))
        if 'ix_issues_id' in [idx['name'] for idx in inspector.get_indexes('issues')]:
            batch_op.drop_index(batch_op.f('ix_issues_id'))
        # Drop foreign key constraint by name
        fks = inspector.get_foreign_keys('issues')
        if any(fk['referred_table'] == 'traces' for fk in fks):
            batch_op.drop_constraint('fk_issues_trace_id', type_='foreignkey')
        batch_op.alter_column('title', nullable=False)
    
    with op.batch_alter_table('audit_logs') as batch_op:
        if 'ix_audit_logs_id' in [idx['name'] for idx in inspector.get_indexes('audit_logs')]:
            batch_op.drop_index(batch_op.f('ix_audit_logs_id'))
    # ### end Alembic commands ### 